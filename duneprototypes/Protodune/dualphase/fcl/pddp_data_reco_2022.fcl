#include "pddp_sam.fcl"
#include "services_dune.fcl"
#include "caldata_dune.fcl"
#include "hitfindermodules_dune.fcl"
#include "cluster_dune.fcl"
#include "trackfindermodules_dune.fcl"
#include "pandoramodules_dune.fcl"
#include "calorimetry_dune10kt.fcl"
#include "mctrutht0matching.fcl"
#include "t0reco.fcl"
#include "particleid.fcl"
#include "showerfindermodules_dune.fcl"
#include "channelstatus_pddp.fcl"
#include "calorimetry_pdune.fcl"

#include "tools_dune.fcl"

process_name: Reco

services:
{
  # Load the service that manages root files for histograms.
  TFileService: { fileName: "hist.root" }
  TimeTracker:       {}
  MemoryTracker:     {}
  RandomNumberGenerator: {} #ART native random number generator
  message:              @local::dune_message_services_prod_debug
  PDDPChannelMappings:
  {
     service_provider: PDDPChannelMap
     MapName: "pddp2crp"
  }
  FileCatalogMetadata:  @local::pddp_art_file_catalog
                        @table::protodunedphase_reco_services_legacy
}

#services.FileCatalogMetadata.applicationVersion: "v08_54_00"

services.Geometry: @local::protodunedphase_geo
services.DetectorPropertiesService:    @local::protodunedphase_detproperties
services.RawDigitPrepService:          @local::adcprep_with_tools_data
services.ChannelStatusService:         @local::pddp_channel_status_2022

# shape and filter parameters
services.SignalShapingServiceDUNEDPhase.ShapeFunc: "1/([0]-[1]) * ( exp(-(x)/[0]) - exp(-(x)/[1]) )"
services.SignalShapingServiceDUNEDPhase.ShapeFuncParams: [0.5, 4.0]
services.SignalShapingServiceDUNEDPhase.ColFilterParams: [ 1.0, 0.0, 0.1 ]

# electric field configuration
services.DetectorPropertiesService.Efield:	[0.495, 4.0, 0.0]

### to add to common
tools.pddp_adcThreshSignalFinder:{
  tool_type: AdcThresholdSignalFinder
  LogLevel: 1
  Threshold: "2.0" 
  BinsBefore: 20
  BinsAfter: 20
  FlagPositive: true
  FlagNegative: false
}

tools.pddp_adcMultiThreshSignalFinder: {
  tool_type: AdcMultiThreshSignalFinder
  LogLevel: 1
  UseStandardDeviation: false
  Threshold1: 1
  SamplesAboveThreshold1: 2
  Threshold2: 0
  SamplesAboveThreshold2: 3
  ThresholdMax: 3
  ThresholdMin: 0
  BinsBefore: 20
  BinsAfter: 20
}

###
tools.pddp_RemoveBadChannels: {
  tool_type: RemoveBadChannels
  LogLevel: 1
  RemoveBadChs: true
  RemoveNoisyChs: true
}

### baseline detrending
tools.pddp_BaselineDetrend: {
  tool_type: BaselineDetrend
  LogLevel:    1
  UseBasicROI: true
  Thresh:      10
  Pad:         50
  MinFrac:     0.5
  Span:        0.04
}

### coherent noise filtering
tools.pddp_NoiseRemovalAdc: {
   tool_type: PdspNoiseRemoval
   LogLevel: 1
   RemoveHighFrequency: true
   RemoveCoherent: true
   CutoffFrequency: 400              # cutoff frequency in kHz for Butterworth low-pass filter
   CorrMode: "median"                # mean or median waveform for coherent noise determination
   CoherentOffline16: true           # remove coherent noise for every 16 offline channels
   CoherentOffline16Groups: []       # remove coherent noise for all groups if list is empty
   CoherentDaq8: false               # remove coherent noise for every 8 online DAQ channels on the same ASIC
   CoherentDaq8Groups: []            # remove coherent noise for all groups if list is empty
   CoherentDaq16: false              # remove coherent noise for every 16 online DAQ channels on the same chip
   CoherentDaq16Groups: []           # remove coherent noise for all groups if list is empty
   CoherentFEMB128: false            # remove coherent noise for every 128 online DAQ channels on the same FEMB
   CoherentFEMB128Groups: []         # remove coherent noise for all groups if list is empty
   UseBasicROIForCNR: true           # use simple threshold ROI finder
   RoiStartThreshold: 6              # threshold on the leading edge
   RoiEndThreshold: 6                # threshold on the trailing edge
   RoiPadLow: 8                      # low bin extension  
   RoiPadHigh: 20                    # high bin extension
}

### Perform deconvolution with SignalShapingService.
tools.pddp_adcVintageDeconvoluter: {
  tool_type: PddpVintageDeconvoluter
  LogLevel: 1
}

### list tools
dataprep_tool_list: [ "digitReader", 
                      "def_adcPedestalFit", 
                      "adcSampleFiller", 
                      "pddp_RemoveBadChannels", 
#		      "pddp_BaselineDetrend",
		      "pddp_NoiseRemovalAdc",
#		      "pddp_adcThreshSignalFinder",
		      "pddp_adcMultiThreshSignalFinder",
		      "pddp_adcVintageDeconvoluter"] 

services.RawDigitPrepService.ToolNames: @local::dataprep_tool_list
services.AdcWireBuildingService.SaveChanPedRMS: true
tools.def_adcPedestalFit.FitRmsMin:  0.1
tools.def_adcPedestalFit.FitRmsMax:  5.0
tools.def_adcPedestalFit.FitOpt: 1
tools.def_adcPedestalFit.FitPrecision: 0.0

#source is DAQ raw data
source:
{
   module_type: PDDPRawInput
   fileNames: ["np02daqdata.dat"]
   maxEvents: -1
   LogLevel: 1
   OutputLabelRawDigits: "daq"
   OutputLabelRDTime:    "timingrawdecoder:daq"
   OutputLabelRDStatus:  "daq"
   InvertBaseline: [[2, 300]]
   SelectCRPs: []
}

# Define and configure some modules to do work on each event.
# First modules are defined; they are scheduled later.
# Modules are grouped by type.
physics:
{
 producers:
 {
### random number saver
       rns:                { module_type: RandomNumberSaver }

### convert raw::RawDigit to recob::wire
       caldata:            @local::producer_adcprep

###  hit finder
       gaushit:            @local::dunefddphase_gaushitfinder

###  reconstruction
       pandora:            @local::protodune_dp_pandora
       pandoraTrack:       @local::dune_pandoraTrackCreation
       pandoraShower:      @local::dune_pandoraShowerCreation

### calorimetry
       calo:               @local::pdune_dp_calodata
       gnocalo:		   @local::pdune_dp_gnocalodata
 }

 #define the producer and filter modules for this path, order matters, 
 #filters reject all following items.  see lines starting physics.producers below
 reco: [ rns, caldata, gaushit, pandora, pandoraTrack, pandoraShower, calo, gnocalo ] 

 #define the output stream, there could be more than one if using filters 
 stream1:  [ out1 ]

 #trigger_paths is a keyword and contains the paths that modify the art::event, 
 #ie filters and producers
 trigger_paths: [reco] 

 #end_paths is a keyword and contains the paths that do not modify the art::Event, 
 #ie analyzers and output streams.  these all run simultaneously
 end_paths:     [stream1]  
}

#block to define where the output goes.  if you defined a filter in the physics
#block and put it in the trigger_paths then you need to put a SelectEvents: {SelectEvents: [XXX]}
#entry in the output stream you want those to go to, where XXX is the label of the filter module(s)
outputs:
{
 out1:
 {
   module_type: RootOutput
   fileName:    "%ifb_reco.root"
   dataTier:    "full-reconstructed"
   #outputCommands: [ "keep *", "drop raw::RawDigit*_*_*_*" ]
   outputCommands: [ "keep *" ]
   streamName:  "cosmics"
   compressionLevel: 1
 }
}

################################################################################
## 
################################################################################
physics.producers.caldata.DoGroups: false
physics.producers.caldata.OnlineChannelMapTool: ""


################################################################################
# GausHit finder configuration
################################################################################

physics.producers.gaushit.MaxMultiHit: 5000
physics.producers.gaushit.LongMaxHits: [5000, 5000]
physics.producers.gaushit.LongPulseWidth: [ 20, 20 ]
physics.producers.gaushit.PulseHeightCuts: [5. ,5.]
physics.producers.gaushit.PulseWidthCuts: [0.5, 0.5]
physics.producers.gaushit.PulseRatioCuts: [0., 0.]
physics.producers.gaushit.Chi2NDF: 10000
physics.producers.gaushit.HitFinderToolVec.CandidateHitsPlane0.RoiThreshold: 3.0
physics.producers.gaushit.HitFinderToolVec.CandidateHitsPlane1.RoiThreshold: 3.0

################################################################################
## Pandora
################################################################################

physics.producers.pandora.ConfigFile:                 "PandoraSettings_Master_ProtoDUNE_DP.xml"
physics.producers.pandora.EnableLineGaps:             true
physics.producers.pandora.EnableMCParticles:          false
physics.producers.pandora.EnableProduction:           true
physics.producers.pandora.GeantModuleLabel:           "largeant"
physics.producers.pandora.HitFinderModuleLabel:       "gaushit"
physics.producers.pandora.PrintOverallRecoStatus:     false
physics.producers.pandora.ShouldPerformSliceId:       false
physics.producers.pandora.ShouldRunAllHitsCosmicReco: true
physics.producers.pandora.ShouldRunCosmicHitRemoval:  false
physics.producers.pandora.ShouldRunCosmicRecoOption:  false
physics.producers.pandora.ShouldRunNeutrinoRecoOption:false
physics.producers.pandora.ShouldRunSlicing:           false
physics.producers.pandora.ShouldRunStitching:         true
physics.producers.pandora.UseGlobalCoordinates:       false
physics.producers.pandora.UseHitWidths:               true
physics.producers.pandoraTrack.PFParticleLabel:       "pandora"
physics.producers.pandoraShower.PFParticleLabel:      "pandora"

#Optical detector configuration
